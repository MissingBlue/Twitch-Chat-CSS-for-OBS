* {
	background-color: transparent !important;
}

:root {
	font: normal normal normal 10px/1 Arial, "源ノ明朝" !important;
}

/* チャットコメントコンテナ */
.chat-list--default {
	font-size: 1rem !important;
	line-height: 1.3 !important;
}
.chat-scrollable-area__message-container > :not(.chat-line__message) {
	display: none !important;
}

/* チャットコメント要素 */
.chat-line__message {
	display: flex;
	margin: 2rem 0;
}

/* コメントタイムスタンプ */
.chat-line__timestamp {
	color: rgba(255,255,255, .75) !important;
	flex: 1 0 auto;
	font-size: 150%;
	font-weight: bold;
	text-shadow: 0 1px 0 rgba(0,0,0,1), 0 0 5px rgba(0,0,0,1);
}

/* コメント送信者情報要素 */
.chat-line__username-container {
	align-content: center;
	align-items: center;
	align-self: stretch;
	border-radius: 0;
	display: flex !important;
	flex: 0 1 auto !important;
	flex-direction: row-reverse;
	flex-wrap: wrap;
	justify-content: center;
	font-size: 300%;
	margin-left: 1.5rem;
	padding-left: 1.5rem;
	position: relative;
}
.chat-line__username-container::after {
	border-right: 5px dotted rgba(240,240,240, 1);
	content: "";
	height: 100%;
	position: absolute;
	left: 0;
}

.chat-line__username-container > * {
	margin: 0 .5rem;
}

/* コメント送信者バッジ */
.chat-badge {
	border-radius: .4rem;
}
/* コメント送信者名 */
.chat-line__username {
	align-items: center;
	display: flex;
	overflow-wrap: break-word;
	word-break: keep-all;
}
/* コメント送信者ID */
.chat-author__display-name {
	color: rgba(255,255,255, .8) !important;
	text-shadow: 0 1px 0 rgba(0,0,0,1), 0 0 5px rgba(0,0,0,1);
}

/* エモート関連 */
.chat-line__message--emote-button, .chat-line__message--emote-button * {
	
	height: var(--size) !important;
	width: var(--size) !important;
	
}
.chat-line__message--emote-button {
	
	transform: rotate3d(0,1,0, 90deg);
	transform-origin: bottom center;
	animation:	emote-in .12s cubic-bezier(.35,-1.28,.56,1.6) .3s 1 normal forwards running,
					emote-anime 8s cubic-bezier(.4,-0.21,.34,1.5) 1s infinite normal forwards running;
	
}
@keyframes emote-in {
	from {
		transform: rotate3d(0,1,0, 90deg);
	}
	to {
		transform: rotate3d(0,1,0, 0deg);
	}
}
@keyframes emote-animea {
	0% {
		transform: translate(0,0);
	}
	50% {
		transform: translate(0,-50%);
	}
	100% {
		transform: translate(0,0);
	}
}
@keyframes emote-anime {
	0% {
		transform: rotate3d(0,1,0, 0deg) translate(0,0);
	}
	2.5% {
		transform: scale(1,.75);
	}
	5% {
		transform: scale(1) translate(0,-40%);
	}
	7.5% {
		transform: scale(1,.75);
	}
	10% {
		transform: translate(0,0);
	}
	12.5% {
		transform: scale(1) translate(0,0);
	}
	100% {
		transform: translate(0,0);
	}
}
.chat-line__message--emote-button img {
	
	image-rendering: -webkit-optimize-contrast;
	image-rendering: crisp-edges;
	
}
.chat-line__message {
	
	--state: paused;
	
	margin-left: 3rem;
	
}
.chat-line__message:not(:nth-last-child(-n+3)) {
	
	--state: running;
	
}
/*
	以下は恐らく Firefox での話。
		
		以下のセレクターを含む、 .chat-line__message の子要素を選択する nth-last-child が 2 から始まるのは、
		1 は常に Welcome などのシステムのコメントが対象になるためで、つまりそうした仕様を前提とした決め打ちである。
		nth-child の引数は、nth-child 与えられたセレクターが対象とする要素の中の順番ではなく、
		そのセレクターが一致した要素の親要素の中の順番を示す。
		例えば div:nth-child(3) で、以下のようなツリー構造だった場合、
		<section>
			<a></a>
			<div id="div1"></div>
			<div id="div2"></div>
			<div id="div3"></div>
			<article></article>
		</section>
		選択される要素は #div3 ではなく #div2 になる。
		これはつまり nth-child は静的なツリー構造を前提としていることを意味すると思われる。
		こうしたことから、以下を含む、セレクターに nth-child を用いたルールは動作環境の変化で容易に予期しない結果を引き起こす点に注意が必要。
		
*/
.chat-line__message:nth-last-child(1) {
	--opacity: 1;
}
.chat-line__message:nth-last-child(2) {
	--opacity: .8;
}
.chat-line__message:nth-last-child(3) {
	--opacity: .6;
}
.chat-line__message:nth-last-child(n+4) {
	--opacity: .3;
}
.chat-line__message:nth-last-child(n+6) {
	--exit-state: running;
}
.chat-line__message--emote-button {
	--size: 112px;
}
.mddis.chat-line__no-background {
	
	align-items: center !important;
	display: flex !important;
	flex-direction: row-reverse;
	justify-content: flex-end;
	opacity: var(--opacity);
	
	animation:	comment-in .3s cubic-bezier(.35,-1.28,.56,1.6) 0s 1 normal forwards running,
					comment-in .5s cubic-bezier(.35,-1.28,.56,1.6) 8s 1 reverse forwards var(--state),
					comment-exit .4s ease-in 0s 1 normal forwards var(--exit-state, paused);
	
}
@keyframes comment-in {
	from {
		transform: scale(0);
	}
	to {
		transform: scale(1);
	}
}
@keyframes comment-exit {
	from {
		opacity: var(--opacity);
	}
	to {
		opacity: 0;
	}
}

/* コメント本文内包要素 */
[data-test-selector="chat-line-message-body"] {
	
	color: rgba(255,255,255, 1) !important;
	font-family: inherit;
	font-size: 400%;
	font-weight: 1000;
	position: relative;
	text-shadow: 0 1px 0 rgba(0,0,0,1), 0 0 5px rgba(0,0,0,1);
	/*word-break: break-all;*/
	word-break: break-word;
	
}
/*
	以下のルールのセレクターは、空白しか中身を持たない要素の選択を企図しており、
		[data-test-selector="chat-line-message-body"] > :not(.chat-line__message--emote-button + .text-fragment)
	で選択されるはずだが、OBS のブラウザーではなぜか機能しない。Firefox だけでなく OBS のブラウザーと同等バージョンの Chromium でもこのセレクターは機能する。
	:not(:empty) はその代替を目的としているが、:empty が空白しか持たない要素も選択対象とするのは将来的な仕様で、現状ではこれも機能しない。
*/
.chat-line__message:nth-last-child(1) [data-test-selector="chat-line-message-body"] > :not(:empty) {
	
	background: linear-gradient(transparent 59.9%, rgba(255,200,200, .4) 60%);
	
}

[data-test-selector="chat-scrollable-area__message-container"] {
	bottom: 0;
	position: absolute;
	width: 100%;
}
[data-test-selector="chat-message-separator"] {
	display: none !important;
}

/* "Welcome to the chat room!" の表示 */
[data-a-target="chat-welcome-message"]
{
	visibility: hidden;
}

/* 以下のような、標準で表示される要素への display: none; は予期せぬ不具合の原因となる可能性が強いので注意が必要。 */

/* チャットページのヘッダー */
.stream-chat-header,
/* 入力フォームの上に表示される通知 */
[data-test-selector="chat-private-callout-queue__callout-container"],
/* チャット入力欄 */
.chat-input__textarea,
/* チャット送信ボタン */
[data-test-selector="chat-input-buttons-container"]
{
	display: none !important;
}